services:
  mysql:
    container_name: barber-shop-mysql
    image: mysql:8.3.0
    restart: always
    environment:
      - MYSQL_TCP_PORT=3307
      - MYSQL_ROOT_PASSWORD=mysql
      - MYSQL_DATABASE=everydaydb
    ports:
      - "3307:3307"
    volumes:
      - db:/var/lib/mysql

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    container_name: barber-shop-redis

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
    command: ["start-dev", "--http-port", "7080"]
    ports:
      - "7080:7080"
    networks:
      - barber_app

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - barber_app



  AdminMicroservice:
    image: "barber_app/admin_microservice"
    container_name: admin-ms
    build:
      context: /AdminMicroservice
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    deploy:
      resources:
        limits:
          memory: 700m
    restart: on-failure
    environment:
      MYSQL_URL: jdbc:mysql://localhost:3307
      SERVICE_PORT: 8081
    networks:
      - barber_app

  UserMicroservice:
    image: "barber_app/user_microservice"
    container_name: user-ms
    build:
      context: /UserApp
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    deploy:
      resources:
        limits:
          memory: 700m
    restart: on-failure
    environment:
      MYSQL_URL: jdbc:mysql://localhost:3307
      SERVICE_PORT: 8082
    networks:
      - barber_app

networks:
  barber_app:
    driver: "bridge"

volumes:
  db: